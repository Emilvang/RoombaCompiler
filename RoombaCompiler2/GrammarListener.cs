//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] GrammarParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] GrammarParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmts([NotNull] GrammarParser.StmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmts([NotNull] GrammarParser.StmtsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] GrammarParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] GrammarParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.var_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_stmt([NotNull] GrammarParser.Var_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.var_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_stmt([NotNull] GrammarParser.Var_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_decl([NotNull] GrammarParser.Var_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_decl([NotNull] GrammarParser.Var_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.cond_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCond_stmt([NotNull] GrammarParser.Cond_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.cond_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCond_stmt([NotNull] GrammarParser.Cond_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.elseif_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseif_stmt([NotNull] GrammarParser.Elseif_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.elseif_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseif_stmt([NotNull] GrammarParser.Elseif_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_stmt([NotNull] GrammarParser.Else_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_stmt([NotNull] GrammarParser.Else_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameter_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_decl([NotNull] GrammarParser.Parameter_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameter_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_decl([NotNull] GrammarParser.Parameter_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.func_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_stmt([NotNull] GrammarParser.Func_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.func_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_stmt([NotNull] GrammarParser.Func_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_expr([NotNull] GrammarParser.Func_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_expr([NotNull] GrammarParser.Func_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.iter_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIter_stmt([NotNull] GrammarParser.Iter_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.iter_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIter_stmt([NotNull] GrammarParser.Iter_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] GrammarParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] GrammarParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] GrammarParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] GrammarParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.var_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_expr([NotNull] GrammarParser.Var_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.var_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_expr([NotNull] GrammarParser.Var_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.num_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum_expr([NotNull] GrammarParser.Num_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.num_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum_expr([NotNull] GrammarParser.Num_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmetic_expr([NotNull] GrammarParser.Arithmetic_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmetic_expr([NotNull] GrammarParser.Arithmetic_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.logic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogic_expr([NotNull] GrammarParser.Logic_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.logic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogic_expr([NotNull] GrammarParser.Logic_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_stmt([NotNull] GrammarParser.Return_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_stmt([NotNull] GrammarParser.Return_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] GrammarParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] GrammarParser.CompileUnitContext context);
}
